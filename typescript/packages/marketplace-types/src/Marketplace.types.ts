/**
* This file was automatically generated by @cosmwasm/ts-codegen@0.28.0.
* DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
* and run the @cosmwasm/ts-codegen generate command to regenerate this file.
*/

export type Uint128 = string;
export interface InstantiateMsg {
  ask_expiry: ExpiryRange;
  fair_burn: string;
  listing_fee: Coin;
  max_asks_removed_per_block: number;
  max_collection_offers_removed_per_block: number;
  max_finders_fee_bps: number;
  max_offers_removed_per_block: number;
  offer_expiry: ExpiryRange;
  operators: string[];
  price_ranges: [string, PriceRange][];
  removal_reward_bps: number;
  sale_hook?: string | null;
  trading_fee_bps: number;
}
export interface ExpiryRange {
  max: number;
  min: number;
}
export interface Coin {
  amount: Uint128;
  denom: string;
  [k: string]: unknown;
}
export interface PriceRange {
  max: Uint128;
  min: Uint128;
}
export type ExecuteMsg = {
  set_ask: {
    asset_recipient?: string | null;
    collection: string;
    expires?: Timestamp | null;
    finders_fee_bps?: number | null;
    price: Coin;
    reserve_for?: string | null;
    token_id: string;
  };
} | {
  update_ask_price: {
    collection: string;
    price: Coin;
    token_id: string;
  };
} | {
  remove_ask: {
    collection: string;
    token_id: string;
  };
} | {
  remove_stale_ask: {
    collection: string;
    token_id: string;
  };
} | {
  migrate_asks: {
    limit: number;
  };
} | {
  set_offer: {
    asset_recipient?: string | null;
    collection: string;
    expires?: Timestamp | null;
    finder?: string | null;
    finders_fee_bps?: number | null;
    token_id: string;
  };
} | {
  buy_now: {
    asset_recipient?: string | null;
    collection: string;
    finder?: string | null;
    token_id: string;
  };
} | {
  accept_offer: {
    asset_recipient?: string | null;
    bidder: string;
    collection: string;
    finder?: string | null;
    token_id: string;
  };
} | {
  remove_offer: {
    collection: string;
    token_id: string;
  };
} | {
  reject_offer: {
    bidder: string;
    collection: string;
    token_id: string;
  };
} | {
  remove_stale_offer: {
    bidder: string;
    collection: string;
    token_id: string;
  };
} | {
  migrate_offers: {
    limit: number;
  };
} | {
  set_collection_offer: {
    asset_recipient?: string | null;
    collection: string;
    expires?: Timestamp | null;
    finders_fee_bps?: number | null;
  };
} | {
  accept_collection_offer: {
    asset_recipient?: string | null;
    bidder: string;
    collection: string;
    finder?: string | null;
    token_id: string;
  };
} | {
  remove_collection_offer: {
    collection: string;
  };
} | {
  remove_stale_collection_offer: {
    bidder: string;
    collection: string;
  };
} | {
  migrate_collection_offers: {
    limit: number;
  };
};
export type Timestamp = Uint64;
export type Uint64 = string;
export type QueryMsg = {
  sudo_params: {};
} | {
  ask: {
    collection: string;
    token_id: string;
  };
} | {
  asks: {
    collection: string;
    query_options?: QueryOptionsForString | null;
  };
} | {
  asks_by_price: {
    collection: string;
    denom: string;
    query_options?: QueryOptionsForTupleOfUint128AndString | null;
  };
} | {
  asks_by_seller: {
    query_options?: QueryOptionsForTupleOfStringAndString | null;
    seller: string;
  };
} | {
  asks_by_expiration: {
    query_options?: QueryOptionsForTupleOfUint64AndStringAndString | null;
  };
} | {
  offer: {
    bidder: string;
    collection: string;
    token_id: string;
  };
} | {
  offers_by_collection: {
    collection: string;
    query_options?: QueryOptionsForTupleOfStringAndString | null;
  };
} | {
  offers_by_token_price: {
    collection: string;
    denom: string;
    query_options?: QueryOptionsForTupleOfUint128AndString | null;
    token_id: string;
  };
} | {
  offers_by_bidder: {
    bidder: string;
    query_options?: QueryOptionsForTupleOfStringAndString | null;
  };
} | {
  offers_by_expiration: {
    query_options?: QueryOptionsForTupleOfUint64AndStringAndStringAndString | null;
  };
} | {
  collection_offer: {
    bidder: string;
    collection: string;
  };
} | {
  collection_offers_by_price: {
    collection: string;
    denom: string;
    query_options?: QueryOptionsForTupleOfUint128AndString | null;
  };
} | {
  collection_offers_by_bidder: {
    bidder: string;
    query_options?: QueryOptionsForString | null;
  };
} | {
  collection_offers_by_expiration: {
    query_options?: QueryOptionsForTupleOfUint64AndStringAndString | null;
  };
} | {
  ask_hooks: {};
} | {
  offer_hooks: {};
} | {
  sale_hooks: {};
};
export interface QueryOptionsForString {
  descending?: boolean | null;
  limit?: number | null;
  start_after?: string | null;
}
export interface QueryOptionsForTupleOfUint128AndString {
  descending?: boolean | null;
  limit?: number | null;
  start_after?: [number, string] | null;
}
export interface QueryOptionsForTupleOfStringAndString {
  descending?: boolean | null;
  limit?: number | null;
  start_after?: [string, string] | null;
}
export interface QueryOptionsForTupleOfUint64AndStringAndString {
  descending?: boolean | null;
  limit?: number | null;
  start_after?: [number, string, string] | null;
}
export interface QueryOptionsForTupleOfUint64AndStringAndStringAndString {
  descending?: boolean | null;
  limit?: number | null;
  start_after?: [number, string, string, string] | null;
}
export type NullableAsk = Ask | null;
export type Addr = string;
export type Decimal = string;
export interface Ask {
  asset_recipient?: Addr | null;
  collection: Addr;
  expires?: Timestamp | null;
  finders_fee_percent?: Decimal | null;
  paid_removal_fee?: Coin | null;
  price: Coin;
  reserve_for?: Addr | null;
  seller: Addr;
  token_id: string;
}
export type ArrayOfString = string[];
export type ArrayOfAsk = Ask[];
export type NullableCollectionOffer = CollectionOffer | null;
export interface CollectionOffer {
  asset_recipient?: Addr | null;
  bidder: Addr;
  collection: Addr;
  expires?: Timestamp | null;
  finders_fee_percent?: Decimal | null;
  price: Coin;
}
export type ArrayOfCollectionOffer = CollectionOffer[];
export interface Offer {
  asset_recipient?: Addr | null;
  bidder: Addr;
  collection: Addr;
  expires?: Timestamp | null;
  finders_fee_percent?: Decimal | null;
  price: Coin;
  token_id: string;
}
export type ArrayOfOffer = Offer[];
export interface SudoParams {
  ask_expiry: ExpiryRange;
  fair_burn: Addr;
  listing_fee: Coin;
  max_asks_removed_per_block: number;
  max_collection_offers_removed_per_block: number;
  max_finders_fee_percent: Decimal;
  max_offers_removed_per_block: number;
  offer_expiry: ExpiryRange;
  operators: Addr[];
  removal_reward_percent: Decimal;
  trading_fee_percent: Decimal;
}